# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  admin_email: 'white.code.text@gmail.com'
  videos_directory: '%kernel.project_dir%/public/uploads/videos'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    # bind:
    #  $globalParams: 'Tüm servislerden erişilebilir'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # servislerin construct metodlarına parametre gönderir buradaki isimle constructorın içindeki parametre adı aynı olmalı
  App\Services\MyService:
    # autowire: false # otomatik injeksiyon yöntemi açık olursa burada parametre göndermeye gerek yok
    arguments:
      # $param: 'Some Parameter'
      # $param2: 'Some Parameter2'
      # $adminEmail: '%admin_email%'
      # $second_service: '@App\Services\MySecondService' # servisler arası bağlantı
    public: true # servislerin public olması gerekiyor
    tags:
      - { name: 'doctrine.event_listener', event: 'postFlush' } # servisleri event listener olarak kullanmak için
      ## ne zaman plush methodu kullanılırsa bu servis çalışır
      - { name: 'kernel.cache_clear' } # servisleri cache temizleme işlemleri için kullanmak için

  App\Services\MySecondService:
    lazy: true # servis kullanılmadığı sürece yüklenmez


  ## Bütün responsları yakalar
  # App\EventListener\VideoCreatedListener:
  #   tags:
  #     - {
  #         name: 'kernel.event_listener',
  #         event: 'video.created.event',
  #         method: 'onVideoCreatedEvent',
  # } # servisleri event listener olarak kullanmak için
  ## ne zaman response methodu kullanılırsa bu servis çalışır
